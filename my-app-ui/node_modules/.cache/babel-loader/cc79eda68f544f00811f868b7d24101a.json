{"ast":null,"code":"var _jsxFileName = \"/Users/sandraabernathy/IdeaProjects/my-app-ui/src/RecipeContainer/index.js\";\nimport React, { Component } from 'react'; // import { async } from 'q';\n\nimport RandomRecipe from '../RandomRecipe'; // import BreakfastRecipe from '../BreakfastRecipe'\n// import LunchRecipe from '../LunchRecipe'\n// import SideDishRecipe from '../SideDishRecipe'\n// import DinnerRecipe from '../DinnerRecipe'\n// import DessertRecipe from '../DessertRecipe'\n\nclass RecipeContianer extends Component {\n  constructor() {\n    super();\n\n    this.getRandomRecipe = async () => {\n      try {\n        const randomRecipes = await fetch('https://api.spoonacular.com/recipes/random?apiKey=55fda1ea8d364f40bf13b71105d65880');\n        const randomRecipesJson = await randomRecipes.json();\n        console.log(\"recipe\", randomRecipesJson.recipes);\n        return randomRecipesJson.recipes;\n      } catch (err) {\n        console.log('get random recipes err: ', err);\n        return err;\n      }\n    };\n\n    this.handleTermChange = term => {\n      const url = \"https://api.spoonacular.com/recipes/random?number=1&tags=\".concat(term, \"&apiKey=55fda1ea8d364f40bf13b71105d65880\");\n      console.log(term);\n      fetch(url, (err, res) => {\n        this.setState({\n          gifs: res.body.data\n        });\n      });\n      console.log(this.state.gifs);\n    };\n\n    this.state = {\n      recipes: [],\n      ingredients: [],\n      instructions: []\n    };\n  }\n\n  componentDidMount() {\n    this.getRandomRecipe().then(data => {\n      this.setState({\n        recipes: data,\n        ingredients: data[0].extendedIngredients,\n        instructions: data[0].analyzedInstructions[0].steps\n      });\n    });\n  }\n\n  render() {\n    console.log(\"this.state\", this.state);\n    return React.createElement(\"div\", {\n      className: \"recipeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Breakfast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Breakfast\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Lunch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Lunch\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Dinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Dinner\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Side Dish\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Side Dish\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Dessert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Dessert\"), React.createElement(RandomRecipe, {\n      recipes: this.state.recipes,\n      ingredients: this.state.ingredients,\n      instructions: this.state.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default RecipeContianer;","map":{"version":3,"sources":["/Users/sandraabernathy/IdeaProjects/my-app-ui/src/RecipeContainer/index.js"],"names":["React","Component","RandomRecipe","RecipeContianer","constructor","getRandomRecipe","randomRecipes","fetch","randomRecipesJson","json","console","log","recipes","err","handleTermChange","term","url","res","setState","gifs","body","data","state","ingredients","instructions","componentDidMount","then","extendedIngredients","analyzedInstructions","steps","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n// import { async } from 'q';\nimport RandomRecipe from '../RandomRecipe'\n// import BreakfastRecipe from '../BreakfastRecipe'\n// import LunchRecipe from '../LunchRecipe'\n// import SideDishRecipe from '../SideDishRecipe'\n// import DinnerRecipe from '../DinnerRecipe'\n// import DessertRecipe from '../DessertRecipe'\n\nclass RecipeContianer extends Component {\n    constructor(){\n        super()\n\n        this.state = {\n            recipes: [],\n            ingredients: [],\n            instructions: [],\n \n        }\n    }\n\n    componentDidMount(){\n        this.getRandomRecipe()\n        .then((data) => {\n            this.setState({\n                recipes: data,\n                ingredients: data[0].extendedIngredients,\n                instructions: data[0].analyzedInstructions[0].steps\n            })\n        })\n\n    }\n\n    getRandomRecipe = async ()=> {\n        try{\n            const randomRecipes = await fetch('https://api.spoonacular.com/recipes/random?apiKey=55fda1ea8d364f40bf13b71105d65880')\n            const randomRecipesJson = await randomRecipes.json()\n            console.log(\"recipe\", randomRecipesJson.recipes)\n            return randomRecipesJson.recipes\n        }catch(err){\n            console.log('get random recipes err: ',err)\n            return err\n        }\n    }\n\n    handleTermChange = (term) => {\n        const url = `https://api.spoonacular.com/recipes/random?number=1&tags=${term}&apiKey=55fda1ea8d364f40bf13b71105d65880`\n        console.log(term)\n\n        fetch(url, (err,res) => {\n            this.setState({\n                gifs: res.body.data\n            })\n        })\n       console.log(this.state.gifs)\n    }\n\n\n    render(){\n        console.log(\"this.state\", this.state)\n        return(\n            <div className=\"recipeContainer\">\n                <button type=\"button\" value=\"Breakfast\">Breakfast</button><br/>\n                <button type=\"button\" value=\"Lunch\">Lunch</button><br/>\n                <button type=\"button\" value=\"Dinner\">Dinner</button><br/>\n                <button type=\"button\" value=\"Side Dish\">Side Dish</button><br/>\n                <button type=\"button\" value=\"Dessert\">Dessert</button>\n                <RandomRecipe recipes={this.state.recipes} ingredients={this.state.ingredients} instructions={this.state.instructions} />\n               {/* five buttons here. each will have a value/name equal to their dish type. will have an onclick */}\n            \n            {/* <BreakfastRecipe breakfastRecipe={this.state.breakfastRecipe} breakfastIngredients={this.state.breakfastIngredients} breakfastInstructions={this.state.breakfastInstructions} />\n                <LunchRecipe lunchRecipe={this.state.lunchRecipe} lunchIngredients={this.state.lunchIngredients} lunchInstructions={this.state.lunchInstructions}/>\n                <DinnerRecipe dinnerRecipe={this.state.dinnerRecipe} dinnerIngredients={this.state.dinnerIngredients} dinnerInstructions={this.state.dinnerInstructions}/>\n                <SideDishRecipe sideDishRecipe={this.state.sideDishRecipe} sideDishIngredients={this.state.sideDishIngredients} sideDishInstructions={this.state.sideDishInstructions}/>\n                <DessertRecipe dessertRecipe={this.state.dessertRecipe} dessertIngredients={this.state.dessertIngredients} dessertInstructions={this.state.dessertInstructions}/> */}\n            </div>\n        )\n    }\n\n}\n\nexport default RecipeContianer"]},"metadata":{},"sourceType":"module"}