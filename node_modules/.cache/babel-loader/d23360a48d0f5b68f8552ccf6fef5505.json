{"ast":null,"code":"var _jsxFileName = \"/Users/sandraabernathy/IdeaProjects/Project3/my-app-ui/src/UserContainer/index.js\";\nimport React, { Component } from 'react';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setUser = () => {\n      this.setState({\n        currentUser: this.props.currentUser\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.setUser();\n    };\n\n    this.deleteAccount = async e => {\n      e.preventDefault();\n      console.log('user from delete route: ', this.state.currentUser);\n\n      try {\n        const deleteRequest = await fetch('http://localhost:8080/users/' + this.state.currentUser.id, {\n          method: 'DELETE',\n          credentials: 'include'\n        });\n        console.log(\"this.props.currentUser: \", this.props.currentUser);\n        console.log(\"delete request: \", deleteRequest);\n\n        if (deleteRequest.status !== 200) {\n          throw Error(\"Delete Request Not Working\");\n        }\n\n        this.setState({\n          currentUser: ''\n        });\n\n        if (this.state.currentUser === '') {\n          this.props.history.push('/'); // this.props.handleLogin(this.state.currentUser);\n        }\n      } catch (err) {\n        console.log(\"delete user err: \", err);\n        return err;\n      }\n\n      console.log(\"this.props.currentUser: \", this.props.currentUser);\n    };\n\n    this.handleFormChange = e => {\n      e.preventDefault();\n      this.setState({\n        currentUser: {\n          [e.target.name]: e.target.value\n        }\n      });\n      console.log(\"user to edit handle for change\", this.state.currentUser);\n    };\n\n    this.editAccount = async e => {\n      e.preventDefault();\n      console.log(\"user to edit : edit route \", this.state.currentUser);\n\n      try {\n        const editRequest = await fetch('http://localhost:8080/users/' + this.state.currentUser.id, {\n          method: 'PUT',\n          credentials: 'include',\n          body: JSON.stringify(this.state.currentUser),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (editRequest.status !== 200) {\n          throw Error('Edit Request Not Working');\n        } // const editResponse = await editRequest.json()\n        // const \n\n      } catch (err) {\n        console.log('Error from edit route: ', err);\n        return err;\n      }\n    };\n\n    this.isLoggedin = () => {\n      if (this.state.currentUser) {\n        return React.createElement(\"div\", {\n          className: \"editInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"editHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"editHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Edit Your Account\")), React.createElement(\"div\", {\n          className: \"editBody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.editAccount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"textBox\",\n          placeholder: this.state.currentUser.email,\n          type: \"email\",\n          name: \"email\",\n          onChange: this.state.handleFormChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          className: \"textBox\",\n          placeholder: \"********\",\n          type: \"password\",\n          name: \"password\",\n          onChange: this.state.handleFormChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          className: \"login\",\n          id: \"uploadButton\",\n          type: \"submit\",\n          value: \"Update Info!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"deleteButton\",\n          onClick: this.deleteAccount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Delete Account\")));\n      } else {\n        this.props.history.push('login');\n      }\n    };\n\n    this.state = {\n      currentUser: {\n        id: '',\n        email: '',\n        password: ''\n      },\n      userToEdit: {}\n    };\n  }\n\n  render() {\n    console.log(\"currentUser: \", this.state.currentUser);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.isLoggedin());\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/sandraabernathy/IdeaProjects/Project3/my-app-ui/src/UserContainer/index.js"],"names":["React","Component","User","constructor","props","setUser","setState","currentUser","componentDidMount","deleteAccount","e","preventDefault","console","log","state","deleteRequest","fetch","id","method","credentials","status","Error","history","push","err","handleFormChange","target","name","value","editAccount","editRequest","body","JSON","stringify","headers","isLoggedin","email","password","userToEdit","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n\n\nclass User extends Component {\n    constructor(props){\n        super(props)\n\n        this.state={\n        currentUser: {\n            id: '',\n            email: '',\n            password: ''        \n        },\n        userToEdit:{\n\n        }\n        }\n    }\n\n    setUser =() => {\n        this.setState({\n        currentUser: this.props.currentUser\n    })\n    }\n    \n    componentDidMount =()=> {\n        this.setUser();\n    }\n\n    deleteAccount = async (e)=> {\n        e.preventDefault();\n        console.log('user from delete route: ', this.state.currentUser)\n\n        try{\n            const deleteRequest = await fetch ('http://localhost:8080/users/'+this.state.currentUser.id, {\n                method: 'DELETE',\n                credentials: 'include'\n            })\n            console.log(\"this.props.currentUser: \", this.props.currentUser)\n            console.log(\"delete request: \", deleteRequest)\n            if(deleteRequest.status !== 200){\n                throw Error (\"Delete Request Not Working\")\n            }\n            this.setState({\n                currentUser: ''\n            })\n            if(this.state.currentUser===''){\n                this.props.history.push('/')\n                // this.props.handleLogin(this.state.currentUser);\n            }\n        }catch (err){\n            console.log(\"delete user err: \", err)\n            return(err)\n        }\n        console.log(\"this.props.currentUser: \", this.props.currentUser)\n    }\n\n    handleFormChange = (e) => {\n        e.preventDefault()\n        this.setState({\n            currentUser: {\n            [e.target.name]: e.target.value\n            }\n        })\n        console.log(\"user to edit handle for change\", this.state.currentUser)\n\n    }\n\n    editAccount = async (e) => {\n        e.preventDefault();\n        console.log(\"user to edit : edit route \", this.state.currentUser)\n        try{\n            const editRequest = await fetch ('http://localhost:8080/users/'+this.state.currentUser.id, {\n                method: 'PUT',\n                credentials: 'include',\n                body: JSON.stringify(this.state.currentUser),\n                headers: {\n                    'Content-Type' : 'application/json'\n                }\n            })\n            if(editRequest.status !== 200){\n                throw Error('Edit Request Not Working')\n            }\n            // const editResponse = await editRequest.json()\n            // const \n\n        }catch(err){\n            console.log('Error from edit route: ', err)\n            return(err)\n        }\n\n    }\n\n\n    isLoggedin = () => {\n        if(this.state.currentUser){\n            return(\n                <div className=\"editInfo\">\n                <div className=\"editHeader\">\n                    <h1 className='editHeader'>Edit Your Account</h1>\n                </div>\n            <div className=\"editBody\">\n                <form onSubmit={this.editAccount}>  \n                    <input className=\"textBox\" placeholder={this.state.currentUser.email} type=\"email\" name=\"email\" onChange={this.state.handleFormChange} /><br/>\n                    <input className='textBox' placeholder=\"********\" type=\"password\" name=\"password\"  onChange={this.state.handleFormChange}/><br/>\n                    <input className='login' id=\"uploadButton\" type='submit' value=\"Update Info!\"/>\n                </form>\n            </div><br/>\n            <section>\n                <button className=\"deleteButton\" onClick={this.deleteAccount}>Delete Account</button>\n            </section>\n        </div>\n            )\n        } else {\n            this.props.history.push('login')\n        }\n    }\n\n    render(){\n        console.log(\"currentUser: \", this.state.currentUser)\n        return(\n            <div>\n             {this.isLoggedin()}\n            </div>\n        )\n    }\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}